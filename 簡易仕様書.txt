# 簡易仕様書


### 作者
市田圭司

### アプリ名
レストランサーチアプリ


#### コンセプト
お店選びに迷わない。


#### こだわったポイント
これまでの履歴を閲覧でできるようにした点


### 該当プロジェクトのリポジトリ URL（GitHub,GitLab など Git ホスティングサービスを利用されている場合）
https://github.com/2000815/react_shop_app
https://github.com/2000815/rails-app


## 開発環境
### 開発環境
VScode
Chrome


### 開発言語
Ruby on Rails 7.0
Ruby 3.2.0
Javascript 6.0
react18.2.0
tailwindcss3.3.3


## 動作対象端末・OS
### 動作対象OS
Chrome


## 開発期間
7日間


## アプリケーション機能


### 機能一覧
- ログイン機能：googleアカウントを用いてログインする。
- 現在地の取得：geolocationを用いて現在地を取得する。
- レストラン検索：ホットペッパーグルメサーチAPIを使用して、現在地周辺の飲食店を検索する。
- レストラン情報取得：ホットペッパーグルメサーチAPIを使用して、飲食店の詳細情報を取得する。
- 履歴機能：これまでどんなお店を見たかを出力する。


### 画面一覧
- 検索画面 ：位置情報を取得してレストランを検索する。
- 一覧画面 ：検索結果の飲食店を一覧表示する。
- 詳細画面 ：お店の詳細情報を表示する。
- 履歴画面 ：これまで閲覧したお店の情報を表示する。
- ログイン/ログアウト画面 ：googleアカウントでログイン/ログアウトを行う。


### 使用しているAPI,SDK,ライブラリなど
- ホットペッパーグルメサーチAPI
- tailwind


###こだわったポイント
コンポーネントの使い回しに工夫を凝らし、アトミックデザインの原則を一部取り入れました。ディレクトリの整理を通じて、コンポーネントの管理がしやすくなりました。また、開発効率を向上させるために、Tailwind CSSを導入しました。

バックエンドにRailsを採用することで、履歴機能を簡単に追加できるようになりました。ダイアログを活用することで、アプリケーションの安定性を向上させ、誤操作による問題を軽減しました。また、お店の選択をサポートするために、履歴機能を実装しました。これにより、ユーザーがお気に入りのお店を見つけやすくなりました。

全体として、コンポーネントの使いやすさ、デザインの整合性、バックエンドの機能強化に取り組み、ユーザーエクスペリエンスの向上を図りました。


###デザイン面でこだわったポイント
カード形式のデザインを採用することで、視覚的に分かりやすく見やすいユーザーインターフェースを追求しました。また、１列に最大２つのカードを表示することで、画像と説明文が整然と配置され、情報が視覚的に整列するよう工夫しました。

全体の配色には暖色系の黄色を採用し、食欲を刺激する色調を取り入れました。この色彩はユーザーに対して食事の魅力を引き立て、興味を引きつける要素となっています。

情報量を適切にコントロールすることにより、ユーザーが迷わずに情報を獲得できるようにしました。また、余白を活用することで、情報が過度に詰まっていないデザインを実現し、ユーザーに快適な閲覧体験を提供しました。

###自己評価
自己評価において、私は60/100点と評価しています。理由は3つあります。

デザインの改善が必要です。特に、最初のページでのログインを促す要素に課題を感じています。現状では、ユーザーが求める情報や食事の選択肢が明確に提示されておらず、改善が必要です。ユーザーが簡単に目的を達成でき、周囲のお店情報を信頼できると感じるデザインが求められています。

ページリロード時の白紙表示バグが存在します。この問題に対処するために、ログイン後のページを正常に表示し、ログインしていない場合はログインページにリダイレクトするような仕組みを導入する必要があります。この点については改善が必要です。

存在しない画像に関する処理が不完全です。現在、存在しない画像が表示される際には「no image」と表示されますが、適切なアプローチは、存在しない画像が一切表示されないようにすることです。この点についても改善が必要です。

このことから、私の自己評価は約60点と考えています。


### アドバイスして欲しいポイント
アプリ導入画面のデザインです。どのような情報をどのようなデザインで作れば使いたいと思ってもらえるか教えて頂きたいです。